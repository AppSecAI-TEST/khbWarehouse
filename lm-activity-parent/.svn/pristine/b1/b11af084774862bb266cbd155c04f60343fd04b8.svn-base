package com.yeepay.g3.core.activity.facade.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.yeepay.g3.core.activity.entity.ActivityInvForProInfo;
import com.yeepay.g3.core.activity.service.ActivityInvForProInfoService;
import com.yeepay.g3.core.activity.utils.EntityDTOConvert;
import com.yeepay.g3.facade.activity.dto.ActivityInvForProInfoDTO;
import com.yeepay.g3.facade.activity.enums.InvForProInfoStatusEnum;
import com.yeepay.g3.facade.activity.facade.ActivityInvForProInfoFacade;
@Service
public class ActivityInvForProInfoFacadeImpl implements ActivityInvForProInfoFacade {
	
	@Autowired
	private ActivityInvForProInfoService activityInvForProInfoServiceImpl;

	@Override
	public ActivityInvForProInfoDTO selectInvForProInfoById(long id) {
		ActivityInvForProInfo activityInvForProInfo = new ActivityInvForProInfo();
		activityInvForProInfo = activityInvForProInfoServiceImpl.selectInvForProInfoById(id);
		ActivityInvForProInfoDTO invForProInfoDto = new ActivityInvForProInfoDTO();
		invForProInfoDto = EntityDTOConvert.toTarget(activityInvForProInfo, ActivityInvForProInfoDTO.class);
		return invForProInfoDto;
	}

	@Override
	public void addActivityInvForProInfo(ActivityInvForProInfoDTO InvForProInfoDto,String ruleIdStr) {
		ActivityInvForProInfo activityInvForProInfo = new ActivityInvForProInfo();
		activityInvForProInfo = EntityDTOConvert.toTarget(InvForProInfoDto, ActivityInvForProInfo.class);
		activityInvForProInfo.setStatus(InvForProInfoStatusEnum.CHECKING);//初始化状态为待审核
		activityInvForProInfoServiceImpl.addActivityInvForProInfo(activityInvForProInfo,ruleIdStr);

	}

	@Override
	public List<ActivityInvForProInfoDTO> selectListByParams(ActivityInvForProInfoDTO InvForProInfoDto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<ActivityInvForProInfoDTO> selectEffInvForProInfoList(ActivityInvForProInfoDTO InvForProInfoDto) {
		Map<String, Object> params = new HashMap<String, Object>();
		if(null == InvForProInfoDto) {
			return null;
		}
//		params.put("InvForProInfoStatus", InvForProInfoDto.getInvForProInfoStatus());
		List<ActivityInvForProInfo> InvForProInfoList = activityInvForProInfoServiceImpl.selectEffInvForProInfoList(params);
		List<ActivityInvForProInfoDTO> InvForProInfoDtoList = new ArrayList<ActivityInvForProInfoDTO>();
		InvForProInfoDtoList = EntityDTOConvert.toTragetList(InvForProInfoList, ActivityInvForProInfoDTO.class);
		return InvForProInfoDtoList;
	}

	@Override
	public void updateActivityInvForProAndRule(ActivityInvForProInfoDTO InvForProInfoDto,String ruleIdStr) {
		if(null != InvForProInfoDto && null != InvForProInfoDto.getId()) {
			ActivityInvForProInfo activityInvForProInfo = new ActivityInvForProInfo();
			activityInvForProInfo = EntityDTOConvert.toTarget(InvForProInfoDto, ActivityInvForProInfo.class);
			activityInvForProInfoServiceImpl.updateActivityInvForProAndRule(activityInvForProInfo,ruleIdStr);
		}

	}

	@Override
	public void updateActivityInvForProStatusById(
			ActivityInvForProInfoDTO invForProInfoDto) {
		if(null != invForProInfoDto && null != invForProInfoDto.getId()) {
			ActivityInvForProInfo activityInvForProInfo = new ActivityInvForProInfo();
			activityInvForProInfo = EntityDTOConvert.toTarget(invForProInfoDto, ActivityInvForProInfo.class);
			activityInvForProInfoServiceImpl.updateActivityInvForProStatusById(activityInvForProInfo);
		}
	}

	

}
