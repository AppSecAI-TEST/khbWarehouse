/**
 * @author 陈大涛
 * 2016-6-1下午4:03:43
 */
package com.yeepay.g3.core.activity.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.yeepay.g3.core.activity.dao.ActivityActionRelaDao;
import com.yeepay.g3.core.activity.dao.ActivityPrizeDao;
import com.yeepay.g3.core.activity.dao.ActivityUserRaffleticketDao;
import com.yeepay.g3.core.activity.entity.ActivityPrize;
import com.yeepay.g3.core.activity.entity.ActivityUserRaffleticket;
import com.yeepay.g3.core.activity.service.ActivityDrawPrizeService;
import com.yeepay.g3.facade.activity.enums.UserRaffleticketStatusEnum;

/**
 * @author 陈大涛
 * 2016-6-1下午4:03:43
 */
@Service
public class ActivityDrawPrizeServiceImpl implements ActivityDrawPrizeService{

	@Resource
	private ActivityUserRaffleticketDao activityUserRaffleticketDaoImpl;
	@Resource
	private ActivityActionRelaDao activityActionRelaDaoImpl;
	@Resource
	private ActivityPrizeDao activityPrizeDaoImpl;
	@Override
	public ActivityPrize updateUserPrize(String memberNo,String actionCode,String activityCode) throws Exception {
		
		//判断用户是否有抽奖机会
		ActivityUserRaffleticket  record = new ActivityUserRaffleticket ();
		record.setMemberNo(memberNo);
		record.setStatus(UserRaffleticketStatusEnum.EFFCTIVE);
		Integer UserRaffleticketCount = activityUserRaffleticketDaoImpl.queryUserRaffleticketCountByStatus(record);
		if(UserRaffleticketCount==null||UserRaffleticketCount==0){
			throw new Exception("NOCHANGE");
		}
		//抽奖算法
		
		//1.根据抽奖事件编号查询抽奖活动是否正常；如果正常查询事件id对应所有奖品信息，如果非正常则返回异常
		Map<String,String> params = new HashMap<String, String>();
		params.put("actionCode", actionCode);
		params.put("activityCode", activityCode);
		Integer activityCount = activityActionRelaDaoImpl.queryActivityByActionCode(params);
		if(activityCount==null||activityCount==0){
			throw new Exception("NOACTIVITY");
		}
		//查询事件id对应所有奖品信息
		List<ActivityPrize> PrizeList = activityPrizeDaoImpl.query("selectByActionCode", actionCode);
		//2.根据奖品中奖概率和抽奖基值，得到每项奖品对应的基值数
		
		//3.获取用户的幸运值（判断是否大于幸运值基值等）
		
		//4.根据用户最终基值（随机数-幸运值）算出应该得到哪项奖品
		
		//5.判断此项奖品是否存在，如果不存在怎获取下一等级奖品（递推），直到最后一个奖品
		
		//6.修改用户抽奖券表 ，用户抽奖券使用记录表，如果没有奖品，则返回奖品bean为null
		
		//7.根据获取的最终奖品id，修改用户中奖记录表，商品库存信息表，奖品信息表
		
		//8.判断是否为需要改变幸运值的奖项；修改用户信息表，用户分值流水表
		
		//9.返回奖品bean
		
		
		return null;
	}

}
