/**
 * @author cdt
 * @date 2016-5-16
 * @time 下午4:10:41
 */
package com.yeepay.g3.core.activity.facade.impl;

import java.math.BigDecimal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ibm.db2.jcc.t4.ac;
import com.yeepay.g3.core.activity.entity.ActivityPrize;
import com.yeepay.g3.core.activity.service.ActivityPrizeService;
import com.yeepay.g3.core.activity.utils.EntityDTOConvert;
import com.yeepay.g3.facade.activity.dto.ActivityPrizeDTO;
import com.yeepay.g3.facade.activity.enums.PrizeStatusEnum;
import com.yeepay.g3.facade.activity.facade.ActivityPrizeFacade;

/**
 * @author cdt
 * @date 2016-5-16
 * @time 下午4:10:41
 */
@Service
public class ActivityPrizeFacadeImpl implements ActivityPrizeFacade {
	@Autowired
	private ActivityPrizeService activityPrizeServiceImpl;
	
	@Override
	public List<ActivityPrizeDTO> selectLeaveAll() {
		List<ActivityPrize> result=activityPrizeServiceImpl.queryLeaveAll();
		return  EntityDTOConvert.toTragetList(result, ActivityPrizeDTO.class);
	}

	@Override
	public List<ActivityPrizeDTO> selectByActionId(Long ActionId) {
		 List<ActivityPrize> activityPrizeList=activityPrizeServiceImpl.queryByActionId(ActionId);
		 List<ActivityPrizeDTO> activityPrizeDtoList=EntityDTOConvert.toTragetList(activityPrizeList, ActivityPrizeDTO.class);
		return activityPrizeDtoList;
	}

	@Override
	public ActivityPrizeDTO selectPrizeById(Long id) {
		ActivityPrize activityPrize = new ActivityPrize();
		activityPrize = activityPrizeServiceImpl.queryPrizeById(id);
		ActivityPrizeDTO prizeDto = EntityDTOConvert.toTarget(activityPrize, ActivityPrizeDTO.class);
		return prizeDto;
	}

	@Override
	public void updateActivityPrizeById(ActivityPrizeDTO prizeDto) {
		ActivityPrize activityPrize = new ActivityPrize();
		activityPrize = EntityDTOConvert.toTarget(prizeDto, ActivityPrize.class);
		activityPrizeServiceImpl.updateActivityPrizeById(activityPrize);
	}

	@Override
	public void addActivityPrize(ActivityPrizeDTO prizeDto) {
		
		ActivityPrize activityPrize = new ActivityPrize();
		prizeDto.setPrizeStatus(PrizeStatusEnum.CHECKING);//奖品状态初始化为待审核
		prizeDto.setPrizeGrantCount((long) 0);//初始化已发数量为0
		activityPrize = EntityDTOConvert.toTarget(prizeDto, ActivityPrize.class);
		activityPrizeServiceImpl.insertActivityPrize(activityPrize);
	}

}
